cmake_minimum_required(VERSION 3.8)
project(robot_sensing)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(cv_bridge REQUIRED)
find_package(OpenCV REQUIRED)

add_executable(maze_solving src/maze_solving_with_lidar.cpp)
ament_target_dependencies(maze_solving rclcpp sensor_msgs geometry_msgs)


add_executable(line_following src/line_following_with_camera.cpp)
ament_target_dependencies(line_following rclcpp sensor_msgs geometry_msgs cv_bridge)
target_link_libraries(line_following ${OpenCV_LIBS})


install(TARGETS
maze_solving
line_following
DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY
launch
worlds
DESTINATION share/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
